* service.py는 localfile에 대해서 작동하는데 file에서는 처음과 끝에 read와 write를 사용하면 load할 데이터가 많아지게 된다.
* 하지만 file에서 작동하는 것처럼 사용하면 DB를 사용해 여러명의 사람들이 쓸 때 모든 사람들이 모든 작업이 끝나고
업데이트(insert, delete, update)를 하게 되면 서로 load되는 데이터에 의해 엉키게 된다.
엉키지 않기 위해서는 db에 connect된 한 사람이 모든 작업을 끝낸 후 다른 사람이 쓰게 되면 비효율적이기 때문에 method마다 연결해
서로 공유하면서 이용할 수 있도록 한다.
* web을 통해 db를 연결할 때는 web과 db 사이에 미리 connect를 만들어두어 필요한 connect를 써내 쓸 수 있도록 한다. 나머지는 db연결과 동일하다.
초기에 메소드를 몇 개 만들지 pool에서 정하여 미리 connect를 만든다.


https://pymysql.readthedocs.io/en/latest/index.html : install 방법/순서 등 볼 수 있다.
* terminal
pip install PyMySQL # 지원하는 버전 확인!

# domain에서 저장될 변수들을 DB에 저장해야한다.

* dbeaver
use aidb; // aidb를 사용하기 위해 사용

CREATE TABLE member (
    name  varchar(20) NOT NULL,
    age   int(3),
    email   varchar(50),
    major   varchar(20) NOT NULL,
    PRIMARY KEY (email)
);

# select = from member
# delete from member
# commit

* visual/store.py
# service.py는 file에 대해 실행하는 파일이기 때문에 DB에 실행되는 store.py파일을 작성한다.

* visual/new_service.py
* main -> DB
* ai_controller -> db_ai_controller







